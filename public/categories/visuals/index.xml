<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visuals on harry morley</title>
    <link>/categories/visuals/</link>
    <description>Recent content in Visuals on harry morley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Tue, 17 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/visuals/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cellular Orchestra</title>
      <link>/posts/cellular-orchestra/</link>
      <pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/cellular-orchestra/</guid>
      <description>Cellular Orchestra</description>
    </item>
    
    <item>
      <title>openCV Mini Projects</title>
      <link>/posts/cv-mini-projects/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/cv-mini-projects/</guid>
      <description>Collection of small computer vision sketches.
 Projects Webcam Harp  openFrameworks/C++ with ofxCv and ofxMaxim libraries.
 Face-controlled generative visuals  2D graphics controlled by Kyle Mcdonald&amp;rsquo;s FaceOSC face tracker.</description>
    </item>
    
    <item>
      <title>A/V Mini Projects</title>
      <link>/posts/av-mini-projects/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/av-mini-projects/</guid>
      <description>Collection of mini projects completed over the year as part of my MA in Computational Arts at Goldsmiths. Image processing algorithms coded from scratch using openFrameworks/C++, audio projects use openFrameworks/C++ with the ofxMaxim library.
 Projects Image manipulator Skews and ripples an image, in this case Monet&amp;rsquo;s Waterlilies.
 Interactive AV sketch  Graphics based on FAL&amp;rsquo;s &amp;ldquo;Motion Catalog&amp;rdquo;, ported to openFrameworks/C++ by myself, with sonified using the ofxMaxim library.</description>
    </item>
    
    <item>
      <title>Invisible Clouds (projection mapping project)</title>
      <link>/posts/invisible-clouds/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/invisible-clouds/</guid>
      <description>My projection mapping project for Workshops in Creative Coding. Coded in openFrameworks/C++ using the ofxPiMapper addon.</description>
    </item>
    
    <item>
      <title>Game of Live</title>
      <link>/posts/game-of-live/</link>
      <pubDate>Mon, 03 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/game-of-live/</guid>
      <description>A sonification of John Conway’s Game of Life, the famous cellular automaton. Built in Ableton’s Max for Live, the system treats an iterating 2D grid as a generative arpeggiator, which outputs MIDI to a synth. Each cell of the grid can be alive or dead, the state of which is determined by a simple set of rules based on the number of neighbours it has.
Visuals coded in Processing.</description>
    </item>
    
  </channel>
</rss>